# ansible_playbooks/setup_mail_server.yml
- name: Configure Customer Email Server
  hosts: mail_server_customer
  become: yes
  vars:
    mail_data_mount_point: "/mnt/mail_data_on_nfs"
  tasks:
    - name: Update apt cache and install common necessary packages
      apt:
        update_cache: yes
        name:
          - postfix
          - dovecot-core
          - dovecot-imapd
          - dovecot-pop3d
          - mailutils
          - nfs-common
          - nagios-nrpe-server
          - nagios-plugins
          - python3-pip # Vẫn cần cho các module Ansible hoặc nếu bạn muốn dùng pip cho việc khác
          - python3-passlib
        state: present

    # <<== TASK MỚI ĐỂ CÀI ĐẶT RIÊNG PYTHON3-PASSLIB ==>>
    - name: Install python3-passlib specifically
      apt:
        name: python3-passlib
        state: present
        update_cache: yes # Có thể update cache lại ở đây cho chắc chắn
      register: passlib_install_result # Đăng ký kết quả để xem log
      ignore_errors: yes # Tạm thời bỏ qua lỗi để xem output, sau đó bỏ dòng này

    - name: Display passlib installation result
      debug:
        var: passlib_install_result
    # <<== KẾT THÚC TASK MỚI ==>>

    # ----- Configure NFS Mount for Mail Data from EC2 NFS Server -----
    - name: Ensure mount point for mail data exists
      file:
        path: "{{ mail_data_mount_point }}"
        state: directory
        mode: '0777'

    - name: Mount NFS share from AWS EC2 NFS Server (and add to /etc/fstab)
      ansible.posix.mount:
        path: "{{ mail_data_mount_point }}"
        src: "{{ nfs_server_private_ip_aws }}:{{ nfs_export_path_aws }}"
        fstype: nfs
        opts: "rw,sync,hard,intr,rsize=8192,wsize=8192,timeo=14,vers=4.1,bg"
        state: mounted

    # ... (Các task cấu hình Postfix, Dovecot giữ nguyên) ...
    - name: Configure Postfix system mailname and main mailer type
      debconf:
        name: postfix
        question: "{{ item.question }}"
        value: "{{ item.value }}"
        vtype: string
      loop:
        - { question: 'postfix/mailname', value: "{{ customer_domain }}" }
        - { question: 'postfix/main_mailer_type', value: "'Internet Site'" }
      notify: Restart postfix

    - name: Update Postfix main.cf configurations
      lineinfile:
        path: /etc/postfix/main.cf
        regexp: "^{{ item.key }}\\s*="
        line: "{{ item.key }} = {{ item.value }}"
        state: present
        create: yes
      loop:
        - { key: 'myhostname', value: "mail.{{ customer_domain }}" }
        - { key: 'mydomain', value: "{{ customer_domain }}" }
        - { key: 'myorigin', value: "$mydomain" }
        - { key: 'mydestination', value: "$myhostname, {{ customer_domain }}, localhost.{{ customer_domain }}, localhost" }
        - { key: 'mynetworks', value: "127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128" }
        - { key: 'home_mailbox', value: "Maildir/" }
      notify: Restart postfix

    - name: Configure Dovecot mail_location to use NFS mount
      lineinfile:
        path: /etc/dovecot/conf.d/10-mail.conf
        regexp: '^mail_location\\s*='
        line: "mail_location = maildir:{{ mail_data_mount_point }}/%u/Maildir"
      notify: Restart dovecot

    # ----- Create Email User -----
    - name: Create system user for email with home on NFS share
      user:
        name: "{{ customer_email_user }}"
        password: "{{ customer_email_password | password_hash('sha512') }}"
        shell: /usr/sbin/nologin
        home: "{{ mail_data_mount_point }}/{{ customer_email_user }}"
        state: present
        create_home: yes
        system: yes
        group: mail
      notify: Restart postfix

    # ----- Configure Nagios NRPE Client -----
    # ... (Các task NRPE giữ nguyên) ...
    - name: Configure NRPE allowed_hosts
      lineinfile:
        path: /etc/nagios/nrpe.cfg
        regexp: '^allowed_hosts='
        line: "allowed_hosts=127.0.0.1,::1,{{ nagios_server_private_ip }}"
      notify: Restart nrpe

    - name: Enable basic NRPE commands
      lineinfile:
        path: /etc/nagios/nrpe.cfg
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: yes
      loop:
        - { regexp: '^(#\s*)?command\[check_users\]=.*', line: 'command[check_users]=/usr/lib/nagios/plugins/check_users -w 5 -c 10' }
        - { regexp: '^(#\s*)?command\[check_load\]=.*', line: 'command[check_load]=/usr/lib/nagios/plugins/check_load -r -w .15,.10,.05 -c .30,.25,.20' }
        - { regexp: '^(#\s*)?command\[check_root_disk\]=.*', line: 'command[check_root_disk]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p /' }
        - { regexp: '^(#\s*)?command\[check_mail_data_disk\]=', line: 'command[check_mail_data_disk]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p {{ mail_data_mount_point }}' }
        - { regexp: '^(#\s*)?command\[check_total_procs\]=.*', line: 'command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 150 -c 200' }
      notify: Restart nrpe

  handlers:
    - name: Restart postfix
      service: name=postfix state=restarted
    - name: Restart dovecot
      service: name=dovecot state=restarted
    - name: Restart nrpe
      service: name=nagios-nrpe-server state=restarted